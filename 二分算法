函数接口定义：
Position BinarySearch( List L, ElementType X );

裁判测试程序样例：
#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 10
#define NotFound 0
typedef int ElementType;

typedef int Position;
typedef struct LNode *List;
struct LNode {
    ElementType Data[MAXSIZE];
    Position Last; /* 保存线性表中最后一个元素的位置 */
};

List ReadInput(); /* 裁判实现，细节不表。元素从下标1开始存储 */
Position BinarySearch( List L, ElementType X );

int main()
{
    List L;
    ElementType X;
    Position P;

    L = ReadInput();
    scanf("%d", &X);
    P = BinarySearch( L, X );
    printf("%d\n", P);

    return 0;
}

/* 你的代码将被嵌在这里 */
Position BinarySearch( List L, ElementType X ){
	int Frist,Last,Mid;
	Frist = 1;
	Last = L->Last;
	Mid = ( Frist + Last )/ 2;
	
	while( Frist <= Last ){/*循环的判断条件是左大于右这个荒诞的条件*/
		if( X > L->Data[Mid] ){
			Frist = Mid + 1;/*左节点右移*/
			Mid = ( Frist + Last )/ 2;/*中间节点位置重新定位*/
		}else 
		if ( X < L->Data[Mid] ){
			Last = Mid - 1 ;
			Mid = ( Frist + Last )/ 2;
		}else{
			return Mid;
		}
	}
	return NotFound;
} 
